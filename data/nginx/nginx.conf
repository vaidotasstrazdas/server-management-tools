# /etc/nginx/nginx.conf

user www-data;
worker_processes auto;
pid /run/nginx.pid;

error_log /var/log/nginx/error.log;
include /etc/nginx/modules-enabled/*.conf;

events {
  worker_connections 768;
}

# --- TCP/UDP proxying (PostgreSQL, SSH over WG) ---
stream {
  # If you ever proxy to hostnames (e.g., gitea.original.app), this makes Nginx resolve them via dnsmasq on wg0
  resolver 10.10.0.1 valid=30s;
  resolver_timeout 5s;

  # PostgreSQL (only master client 10.10.0.2)
  server {
    listen 10.10.0.1:5432;
    proxy_connect_timeout 5s;
    proxy_timeout 300s;          # keep long-running queries alive
    proxy_pass 127.0.0.1:5432;

    allow 10.10.0.2;
    deny all;
  }

  # SSH (allow whole WG /24)
  server {
    listen 10.10.0.1:2222;
    proxy_connect_timeout 5s;
    proxy_timeout 3600s;         # SSH sessions can be long-lived
    proxy_pass 127.0.0.1:2222;

    allow 10.10.0.0/24;
    deny all;
  }
}

# --- HTTP(S) ---
http {
  # If HTTP locations use hostnames (e.g., proxy_pass http://gitea.original.app:3000;)
  # this ensures they resolve via dnsmasq over wg0 and re-resolve periodically.
  resolver 10.10.0.1 valid=30s;
  resolver_timeout 5s;

  sendfile on;
  tcp_nopush on;
  types_hash_max_size 2048;
  server_tokens off;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  # Only modern TLS
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers on;

  access_log /var/log/nginx/access.log;

  gzip on;
  # (optional) fine-tune gzip types later if you serve static assets a lot

  # Keep your configs modular
  include /etc/nginx/conf.d/*.conf;
  include /etc/nginx/sites-enabled/*;
}
